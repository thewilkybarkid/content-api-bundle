language: php

php:
    - 7.2
    - 7.3
    - nightly

before_install:
    - &Xdebug phpenv config-rm xdebug.ini || true

install:
    - &Composer travis_retry composer install --classmap-authoritative --no-suggest --prefer-dist

script:
    - vendor/bin/phpunit --exclude-group database

jobs:
    include:

        - &Symfony
          stage: Test
          name: Symfony 4.1
          env: SYMFONY_REQUIRE=~4.1.0
          before_install:
              - *Xdebug
              - travis_retry composer global require --no-scripts symfony/flex
          php: 7.2

        - << : *Symfony
          name: Symfony 4.0
          env: SYMFONY_REQUIRE=~4.0.0

        - << : *Symfony
          name: Symfony 3.4
          env: SYMFONY_REQUIRE=~3.4.0

        - stage: Test
          name: Lowest dependency versions
          php: 7.2
          install:
              - travis_retry composer update --classmap-authoritative --no-suggest  --prefer-dist --prefer-lowest --prefer-stable

        - &Database
          stage: Test
          name: SQLite
          php: 7.2
          script:
              - vendor/bin/phpunit --group database

        - &MySQL
          << : *Database
          name: MySQL 5
          env: IMAGE=mysql:5
          sudo: true
          services:
              - docker
          install:
              - *Composer
              - travis_retry docker pull ${IMAGE}
          before_script:
              - .travis/run.sh "mysql" "mysqladmin ping --silent" "--env MYSQL_ALLOW_EMPTY_PASSWORD=yes --env MYSQL_DATABASE=test --publish 9000:3306 ${IMAGE} ${OPTIONS}"
              - export DB_URI=mysql://root@127.0.0.1:9000/test

        - << : *MySQL
          name: MySQL 8
          env: IMAGE=mysql:8 OPTIONS=--default-authentication-plugin=mysql_native_password

        - &MariaDB
          << : *MySQL
          name: MariaDB 5
          env: IMAGE=mariadb:5

        - << : *MariaDB
          name: MariaDB 10
          env: IMAGE=mariadb:10

        - &PostgreSQL
          <<: *MySQL
          name: PostgreSQL 9
          env: IMAGE=postgres:9
          before_script:
              - .travis/run.sh "postgres" "psql --username=postgres --list" "--publish 9000:5432 ${IMAGE}"
              - export DB_URI=pgsql://postgres@localhost:9000/postgres

        - << : *PostgreSQL
          name: PostgreSQL 10
          env: IMAGE=postgres:10

        - << : *PostgreSQL
          name: PostgreSQL 11
          env: IMAGE=postgres:11

        - stage: Code Quality
          name: Coding standards
          script:
              - vendor/bin/phpcs -p

        - stage: Code Quality
          name: Static analysis
          script:
              - vendor/bin/phpstan analyse

        - stage: Code Quality
          name: Lint translation files
          script:
              - bin/console lint:xliff src/Resources/translations

stages:
    - Test
    - name: Code Quality
      if: type = pull_request

allow_failures:
    - php: nightly

cache:
    directories:
        - $HOME/.composer/cache/files

if: |
    branch = master OR \
    branch =~ /^(?:[0-9]|[1-9][0-9]*)\.(?:[0-9]|[1-9][0-9]*)$/ OR \
    tag IS present OR \
    type = pull_request
